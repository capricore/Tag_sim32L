<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [build\Tag_sim32L.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image build\Tag_sim32L.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 24]: Last Updated: Mon Sep 01 12:50:44 2014
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; parse_rx_update_code_pkt &rArr; parse_rx_config_pkt &rArr; send_config_quit_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">WDTIMER0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">WDTIMER0_IRQHandler</a><BR>
 <LI><a href="#[e]">LPTIMER0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">LPTIMER0_IRQHandler</a><BR>
 <LI><a href="#[f]">DMAERR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">DMAERR_IRQHandler</a><BR>
 <LI><a href="#[10]">DMACH0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">DMACH0_IRQHandler</a><BR>
 <LI><a href="#[11]">DMACH1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">DMACH1_IRQHandler</a><BR>
 <LI><a href="#[12]">DMACH2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">DMACH2_IRQHandler</a><BR>
 <LI><a href="#[13]">DMACH3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">DMACH3_IRQHandler</a><BR>
 <LI><a href="#[14]">DMACH4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">DMACH4_IRQHandler</a><BR>
 <LI><a href="#[15]">DMACH5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">DMACH5_IRQHandler</a><BR>
 <LI><a href="#[16]">DMACH6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">DMACH6_IRQHandler</a><BR>
 <LI><a href="#[17]">DMACH7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">DMACH7_IRQHandler</a><BR>
 <LI><a href="#[18]">DMACH8_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">DMACH8_IRQHandler</a><BR>
 <LI><a href="#[19]">DMACH9_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">DMACH9_IRQHandler</a><BR>
 <LI><a href="#[1c]">TIMER1L_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">TIMER1L_IRQHandler</a><BR>
 <LI><a href="#[1d]">TIMER1H_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">TIMER1H_IRQHandler</a><BR>
 <LI><a href="#[1e]">TIMER2L_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">TIMER2L_IRQHandler</a><BR>
 <LI><a href="#[1f]">TIMER2H_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">TIMER2H_IRQHandler</a><BR>
 <LI><a href="#[20]">ACCTR0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ACCTR0_IRQHandler</a><BR>
 <LI><a href="#[21]">EPCA0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">EPCA0_IRQHandler</a><BR>
 <LI><a href="#[22]">USART0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">USART0_IRQHandler</a><BR>
 <LI><a href="#[23]">UART0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">UART0_IRQHandler</a><BR>
 <LI><a href="#[24]">SPI0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">SPI0_IRQHandler</a><BR>
 <LI><a href="#[25]">SPI1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">SPI1_IRQHandler</a><BR>
 <LI><a href="#[26]">I2C0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">I2C0_IRQHandler</a><BR>
 <LI><a href="#[27]">SARADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">SARADC0_IRQHandler</a><BR>
 <LI><a href="#[28]">CMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">CMP0_IRQHandler</a><BR>
 <LI><a href="#[29]">CMP1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">CMP1_IRQHandler</a><BR>
 <LI><a href="#[2a]">DTM0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">DTM0_IRQHandler</a><BR>
 <LI><a href="#[2b]">DTM1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">DTM1_IRQHandler</a><BR>
 <LI><a href="#[2c]">DTM2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">DTM2_IRQHandler</a><BR>
 <LI><a href="#[2d]">AES0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">AES0_IRQHandler</a><BR>
 <LI><a href="#[2e]">ENCDEC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">ENCDEC0_IRQHandler</a><BR>
 <LI><a href="#[30]">VDDLOW_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">VDDLOW_IRQHandler</a><BR>
 <LI><a href="#[31]">VCPFAIL_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">VCPFAIL_IRQHandler</a><BR>
 <LI><a href="#[32]">DCDC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">DCDC_IRQHandler</a><BR>
 <LI><a href="#[34]">IDAC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">IDAC0_IRQHandler</a><BR>
 <LI><a href="#[35]">PLL0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">PLL0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ACCTR0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2d]">AES0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from cpu.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[28]">CMP0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[29]">CMP1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[32]">DCDC_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[10]">DMACH0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[11]">DMACH1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[12]">DMACH2_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[13]">DMACH3_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[14]">DMACH4_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[15]">DMACH5_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[16]">DMACH6_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[17]">DMACH7_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[18]">DMACH8_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[19]">DMACH9_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[f]">DMAERR_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2a]">DTM0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2b]">DTM1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2c]">DTM2_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2e]">ENCDEC0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[21]">EPCA0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from cpu.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[26]">I2C0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[34]">IDAC0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[e]">LPTIMER0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from cpu.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from cpu.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[b]">PBEXT0_IRQHandler</a> from as3933.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[c]">PBEXT1_IRQHandler</a> from rf2xx_mcu.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[35]">PLL0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[33]">PMATCH_IRQHandler</a> from as3933.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[d]">RTC0ALRM_IRQHandler</a> from rtc0.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[2f]">RTC0FAIL_IRQHandler</a> from rtc0.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[27]">SARADC0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[24]">SPI0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[25]">SPI1_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from cpu.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[37]">SystemInit</a> from system_sim3l1xx.o(.text) referenced from startup_sim3l1xx_arm.o(.text)
 <LI><a href="#[1b]">TIMER0H_IRQHandler</a> from timeout.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1a]">TIMER0L_IRQHandler</a> from timeout.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1d]">TIMER1H_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1c]">TIMER1L_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1f]">TIMER2H_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[1e]">TIMER2L_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[23]">UART0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[22]">USART0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from cpu.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[31]">VCPFAIL_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[30]">VDDLOW_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[a]">WDTIMER0_IRQHandler</a> from startup_sim3l1xx_arm.o(.text) referenced from startup_sim3l1xx_arm.o(RESET)
 <LI><a href="#[38]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_sim3l1xx_arm.o(.text)
 <LI><a href="#[39]">fputc</a> from retarget_arm.o(.text) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[36]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[38]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(.text)
</UL>
<P><STRONG><a name="[11b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[3a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[116]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[11c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[11d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[11e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[11f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[120]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[7c]"></a>delay_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mcu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_start
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_leave_sleep_mode
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_calibrate_pll
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_calibrate_filter
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_cca
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_ed_scan
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_reset_state_machine
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_trx_reset
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_init
</UL>

<P><STRONG><a name="[39]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, retarget_arm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ITM_SendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[121]"></a>fgetc</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, retarget_arm.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget_arm.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>__backspace</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget_arm.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget_arm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ITM_SendChar
</UL>

<P><STRONG><a name="[124]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget_arm.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WDTIMER0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTIMER0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTIMER0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LPTIMER0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIMER0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMAERR_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAERR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAERR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMACH0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMACH1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMACH2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMACH3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMACH4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMACH5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMACH6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMACH7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMACH8_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH8_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH8_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMACH9_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH9_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH9_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER1L_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1L_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1L_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER1H_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1H_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1H_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER2L_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2L_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2L_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER2H_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2H_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2H_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ACCTR0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCTR0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACCTR0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EPCA0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPCA0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPCA0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>UART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SARADC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SARADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SARADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CMP0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>CMP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DTM0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DTM1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DTM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>AES0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>ENCDEC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCDEC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCDEC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>VDDLOW_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDDLOW_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VDDLOW_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>VCPFAIL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCPFAIL_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCPFAIL_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DCDC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCDC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>IDAC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IDAC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IDAC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PLL0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sim3l1xx_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SystemInit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, system_sim3l1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_sim3l1xx.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>_SI32_RSTSRC_A_initialize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>_SI32_RSTSRC_A_write_reseten</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>_SI32_RSTSRC_A_read_reseten</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>_SI32_RSTSRC_A_enable_vdd_monitor_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>_SI32_RSTSRC_A_disable_vdd_monitor_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>_SI32_RSTSRC_A_enable_missing_clock_detector_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>_SI32_RSTSRC_A_disable_missing_clock_detector_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>_SI32_RSTSRC_A_enable_watchdog_timer_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>_SI32_RSTSRC_A_disable_watchdog_timer_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>_SI32_RSTSRC_A_generate_software_reset</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>_SI32_RSTSRC_A_enable_comparator0_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>_SI32_RSTSRC_A_disable_comparator0_reset_source</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>_SI32_RSTSRC_A_enable_comparator1_reset_source</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>_SI32_RSTSRC_A_disable_comparator1_reset_source</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>_SI32_RSTSRC_A_enable_low_power_mode_charge_pump_reset_source</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>_SI32_RSTSRC_A_disable_low_power_mode_charge_pump_reset_source</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>_SI32_RSTSRC_A_enable_rtc0_reset_source</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>_SI32_RSTSRC_A_disable_rtc0_reset_source</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>_SI32_RSTSRC_A_enable_system_reset_to_low_power_charge_pump</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>_SI32_RSTSRC_A_disable_system_reset_to_low_power_charge_pump</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>_SI32_RSTSRC_A_enable_system_reset_to_uart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>_SI32_RSTSRC_A_disable_system_reset_to_uart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>_SI32_RSTSRC_A_enable_system_reset_to_lcd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>_SI32_RSTSRC_A_disable_system_reset_to_lcd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>_SI32_RSTSRC_A_enable_system_reset_to_acctr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>_SI32_RSTSRC_A_disable_system_reset_to_acctr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>_SI32_RSTSRC_A_enable_system_reset_to_rtc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>_SI32_RSTSRC_A_disable_system_reset_to_rtc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>_SI32_RSTSRC_A_get_last_reset_source</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, si32_rstsrc_a_type.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>send_test_pkg_b</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_test_pkg_b &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>send_test_pkg_a</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_test_pkg_a &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>send_test_pkg</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_test_pkg &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>main</STRONG> (Thumb, 2414 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = main &rArr; parse_rx_update_code_pkt &rArr; parse_rx_config_pkt &rArr; send_config_quit_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SI32_RSTSRC_A_get_last_reset_source
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sys_info_to_flash
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtimer_stop
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_next_wake_time
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkt
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_hrt_pkt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ex_pkt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_en_pkt
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_add_item
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_pan_id
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter_from_flash
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_syn_pkt
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_cave_pkt
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_parze_packet
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_start
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rtc_setcap
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cfg_paras
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cfg_default
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exciterTypeAnalyze
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_hal_register_read
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_a
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_b
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[63]"></a>send_test_pkg_c</STRONG> (Thumb, 436 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_test_pkg_c &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
</UL>

<P><STRONG><a name="[64]"></a>send_test_pkg_d</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_test_pkg_d &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
</UL>

<P><STRONG><a name="[48]"></a>get_cfg_default</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, configuration.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>get_cfg_paras</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, configuration.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>str_compare</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, configuration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = str_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
</UL>

<P><STRONG><a name="[65]"></a>send_config_cnt_ack</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, configuration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_config_cnt_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_finish
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_calculate
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter_from_flash
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
</UL>

<P><STRONG><a name="[69]"></a>send_config_cmd_ack</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, configuration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_config_cmd_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
</UL>

<P><STRONG><a name="[6a]"></a>send_config_quit_ack</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, configuration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_config_quit_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_finish
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_calculate
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
</UL>

<P><STRONG><a name="[6b]"></a>parse_rx_config_pkt</STRONG> (Thumb, 1770 bytes, Stack size 32 bytes, configuration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = parse_rx_config_pkt &rArr; send_config_quit_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_finish
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_calculate
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_quit_ack
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cmd_ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cnt_ack
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_compare
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sys_info_to_flash
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter_from_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[4e]"></a>exciterTypeAnalyze</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, event_exciter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>parse_rx_syn_pkt</STRONG> (Thumb, 404 bytes, Stack size 0 bytes, event_receive_pkt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>send_syn_ack</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, event_receive_pkt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_syn_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
</UL>

<P><STRONG><a name="[5e]"></a>parse_rx_cave_pkt</STRONG> (Thumb, 396 bytes, Stack size 0 bytes, event_receive_pkt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>send_cf_ack</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, event_receive_pkt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_cf_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_finish
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_calculate
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[53]"></a>send_test_pkt</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, event_receive_pkt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = send_test_pkt &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>code_data_handle</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, event_receive_pkt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = code_data_handle &rArr; write_data_to_flash &rArr; write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[72]"></a>write_image_info_to_flash</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, event_receive_pkt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = write_image_info_to_flash &rArr; write_data_to_flash &rArr; write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[5f]"></a>parse_rx_update_code_pkt</STRONG> (Thumb, 980 bytes, Stack size 16 bytes, event_receive_pkt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = parse_rx_update_code_pkt &rArr; parse_rx_config_pkt &rArr; send_config_quit_ack &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_to_flash_from_buff
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_compute
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_image_info_to_flash
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_data_handle
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cf_ack
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_finish
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_calculate
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>send_start_config_flag_pkt</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, event_receive_pkt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[60]"></a>set_next_wake_time</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, event_wk_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_next_wake_time
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>send_cave_pkt</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, event_wk_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = send_cave_pkt &rArr; mac_send_packet_extend &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_quater_seconds
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
</UL>

<P><STRONG><a name="[56]"></a>send_en_pkt</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, event_wk_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_en_pkt &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>send_hrt_pkt</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, event_wk_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_hrt_pkt &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>send_ex_pkt</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, event_wk_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send_ex_pkt &rArr; mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>write_sys_info_to_flash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = write_sys_info_to_flash &rArr; write_data_to_flash &rArr; write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>read_parameter_from_flash</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash_operation.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cnt_ack
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>Systick_Init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Systick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
</UL>

<P><STRONG><a name="[51]"></a>Systick_off</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>delay_ms</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_s
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cave_pkt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_syn_ack
</UL>

<P><STRONG><a name="[7d]"></a>delay_s</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, systick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[142]"></a>delay_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>as3933_port_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, as3933.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = as3933_port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_spi_port_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_init
</UL>

<P><STRONG><a name="[4c]"></a>as3933_init</STRONG> (Thumb, 322 bytes, Stack size 8 bytes, as3933.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = as3933_init &rArr; as3933_hal_register_write
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_as_register_direct_command
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_spi_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_hal_register_write
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_port_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>as3933_data_read</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, as3933.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = as3933_data_read &rArr; crc_calculate &rArr; crc_step
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_as_register_direct_command
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_finish
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_calculate
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
</UL>

<P><STRONG><a name="[84]"></a>as3933_wake_int_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, as3933.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[b]"></a>PBEXT0_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, as3933.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PBEXT0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PMATCH_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, as3933.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PMATCH_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>as3933_hal_register_read</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, as3933_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = as3933_hal_register_read
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_data_read
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkt
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>as3933_hal_register_write</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, as3933_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = as3933_hal_register_write
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_init
</UL>

<P><STRONG><a name="[81]"></a>spi0_as_register_direct_command</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, as3933_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi0_as_register_direct_command
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_data_read
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_init
</UL>

<P><STRONG><a name="[7f]"></a>as3933_spi_port_init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, as3933_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_port_init
</UL>

<P><STRONG><a name="[143]"></a>as3933_spi_port_off</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, as3933_spi.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>as3933_spi_init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, as3933_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_init
</UL>

<P><STRONG><a name="[89]"></a>SPI0_ReadWrite</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, as3933_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_as_register_direct_command
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_hal_register_write
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_hal_register_read
</UL>

<P><STRONG><a name="[8c]"></a>set_periph_clock</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, clkctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_init_from_reset
</UL>

<P><STRONG><a name="[8b]"></a>set_system_clock</STRONG> (Thumb, 998 bytes, Stack size 0 bytes, clkctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_init_from_reset
</UL>

<P><STRONG><a name="[8a]"></a>sysclk_init_from_reset</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, clkctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sysclk_init_from_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_clock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_periph_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
</UL>

<P><STRONG><a name="[144]"></a>get_system_clock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clkctrl.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>get_periph_clock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clkctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rfspi_clkdiv
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cpu.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>halt</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, cpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = halt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NMI_Handler &rArr; halt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HardFault_Handler &rArr; halt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MemManage_Handler &rArr; halt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BusFault_Handler &rArr; halt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UsageFault_Handler &rArr; halt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>set_ahb_clock</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, cpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_update
</UL>

<P><STRONG><a name="[90]"></a>cpu_update</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ahb_clock
</UL>

<P><STRONG><a name="[145]"></a>get_msTicks</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>read_from_flash_to_buff</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, flashctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_from_flash_to_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sysparam
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sysparam
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_sysparam_to_buff
</UL>

<P><STRONG><a name="[75]"></a>write_to_flash_from_buff</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, flashctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_to_flash
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[74]"></a>erase_flash</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, flashctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = erase_flash
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_to_flash
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[71]"></a>write_data_to_flash</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, flashctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = write_data_to_flash &rArr; write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_to_flash_from_buff
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_image_info_to_flash
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;code_data_handle
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sys_info_to_flash
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sysparam
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_sysparam_to_flash
</UL>

<P><STRONG><a name="[43]"></a>system_init_from_reset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, modes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = system_init_from_reset &rArr; resume_sysparam &rArr; copy_sysparam_to_flash &rArr; write_data_to_flash &rArr; write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysclk_init_from_reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtimer_stop
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resume_sysparam
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinwk_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_init_from_reset
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>pb_init_from_reset</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, pb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
</UL>

<P><STRONG><a name="[9e]"></a>led_off</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_start
</UL>

<P><STRONG><a name="[88]"></a>led_on</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMATCH_IRQHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_start
</UL>

<P><STRONG><a name="[146]"></a>sync_port_on</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>sync_port_off</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>sync_interval_port_on</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>sync_interval_port_off</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>DCDC0_clk_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_init
</UL>

<P><STRONG><a name="[96]"></a>open_debug</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
</UL>

<P><STRONG><a name="[98]"></a>vdrv_on</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
</UL>

<P><STRONG><a name="[4a]"></a>pmu_init</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, pmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = pmu_init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vdrv_on
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCDC0_clk_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14a]"></a>trig_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>trig_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>trig_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>pmu_enter_sleep</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, pmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pmu_enter_sleep &rArr; rf2xx_tat_enter_sleep_mode &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_as_register_direct_command
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_data_read
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtimer_stop
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_off
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_enter_sleep_mode
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_port_off
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vdrv_on
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14d]"></a>vdrv_off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pmu.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>intwk_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, pmu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[95]"></a>pinwk_init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pinwk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
</UL>

<P><STRONG><a name="[45]"></a>led_start</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_start
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>rtc_alarm_relative_malloc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_add_item
</UL>

<P><STRONG><a name="[a7]"></a>rtc_alarm_relative_free</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_handle_timeout_item
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_delete_item
</UL>

<P><STRONG><a name="[14e]"></a>rtc_alarm_relative_init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, rtc_alarm_relative.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>rtc_alarm_relative_initial_alarm</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtc_alarm_relative_initial_alarm &rArr; get_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_enable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_add_item
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_adjust_item
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_update_item
</UL>

<P><STRONG><a name="[a4]"></a>rtc_alarm_relative_insert_item</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rtc_alarm_relative_insert_item
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_add_item
</UL>

<P><STRONG><a name="[55]"></a>rtc_alarm_relative_add_item</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rtc_alarm_relative_add_item &rArr; rtc_alarm_relative_initial_alarm &rArr; get_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_insert_item
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_initial_alarm
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_malloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>rtc_alarm_relative_delete_item</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, rtc_alarm_relative.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_free
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>

<P><STRONG><a name="[a8]"></a>rtc_alarm_relative_handle_timeout_item</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rtc_alarm_relative_handle_timeout_item &rArr; get_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_free
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_update_item
</UL>

<P><STRONG><a name="[a9]"></a>rtc_alarm_relative_update_item</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rtc_alarm_relative_update_item &rArr; rtc_alarm_relative_handle_timeout_item &rArr; get_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_handle_timeout_item
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_initial_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC0ALRM_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>rtc_alarm_relative_adjust_item</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, rtc_alarm_relative.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_initial_alarm
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>

<P><STRONG><a name="[ae]"></a>rtc_overflow_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[ab]"></a>rtc_set_from_reset</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, rtc0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_set_from_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[94]"></a>rtc_init</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, rtc0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc_init &rArr; rtc_set_from_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_set_from_reset
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_overflow_enable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
</UL>

<P><STRONG><a name="[14f]"></a>rtc_overflow_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtc0.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>rtc_alarm_enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_next_wake_time
</UL>

<P><STRONG><a name="[150]"></a>rtc_alarm_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtc0.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>rtc_alarm_relative_enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_initial_alarm
</UL>

<P><STRONG><a name="[a2]"></a>rtc_alarm_relative_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_initial_alarm
</UL>

<P><STRONG><a name="[58]"></a>get_current_time</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, rtc0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_quater_seconds
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_add_item
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_trx_recv_packet
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_handle_timeout_item
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_initial_alarm
</UL>

<P><STRONG><a name="[57]"></a>get_rtc_setcap</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>get_quater_seconds</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtc0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_quater_seconds &rArr; get_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cave_pkt
</UL>

<P><STRONG><a name="[b1]"></a>set_current_time</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, rtc0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = set_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
</UL>

<P><STRONG><a name="[d]"></a>RTC0ALRM_IRQHandler</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, rtc0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RTC0ALRM_IRQHandler &rArr; rtc_alarm_relative_update_item &rArr; rtc_alarm_relative_handle_timeout_item &rArr; get_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_update_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTC0FAIL_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>time_synchronizing</STRONG> (Thumb, 1148 bytes, Stack size 24 bytes, rtc0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = time_synchronizing &rArr; send_cave_pkt &rArr; mac_send_packet_extend &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cave_pkt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_syn_ack
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rtc_setcap
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_c
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_current_time
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>timeout_item_init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_init
</UL>

<P><STRONG><a name="[b2]"></a>ms_timer_init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_init
</UL>

<P><STRONG><a name="[b5]"></a>us_timer_init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_init
</UL>

<P><STRONG><a name="[b6]"></a>timeout_init</STRONG> (Thumb, 368 bytes, Stack size 8 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_periph_clock
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_timer_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_timer_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_item_init
</UL>

<P><STRONG><a name="[151]"></a>timeout_off</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timeout.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>get_timeout_time</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_remove_item
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_add_item
</UL>

<P><STRONG><a name="[b9]"></a>set_timeout_time</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_timeout_time
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_updata_item
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_remove_item
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_add_item
</UL>

<P><STRONG><a name="[bb]"></a>stop_timeout_timer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_remove_item
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_add_item
</UL>

<P><STRONG><a name="[be]"></a>start_timeout_timer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_remove_item
</UL>

<P><STRONG><a name="[ba]"></a>timeout_add_item</STRONG> (Thumb, 442 bytes, Stack size 72 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_timeout_timer
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_timeout_time
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timeout_time
</UL>

<P><STRONG><a name="[bd]"></a>timeout_remove_item</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_timeout_timer
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_timeout_timer
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_timeout_time
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timeout_time
</UL>

<P><STRONG><a name="[bf]"></a>timeout_updata_item</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timeout_updata_item &rArr; set_timeout_time
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_timeout_time
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_timeout_interrupt_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_timeout_interrupt_handler
</UL>

<P><STRONG><a name="[c0]"></a>us_timeout_interrupt_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = us_timeout_interrupt_handler &rArr; timeout_updata_item &rArr; set_timeout_time
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_updata_item
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0H_IRQHandler
</UL>

<P><STRONG><a name="[c1]"></a>ms_timeout_interrupt_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ms_timeout_interrupt_handler &rArr; timeout_updata_item &rArr; set_timeout_time
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout_updata_item
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0L_IRQHandler
</UL>

<P><STRONG><a name="[1b]"></a>TIMER0H_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIMER0H_IRQHandler &rArr; us_timeout_interrupt_handler &rArr; timeout_updata_item &rArr; set_timeout_time
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_timeout_interrupt_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER0L_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIMER0L_IRQHandler &rArr; ms_timeout_interrupt_handler &rArr; timeout_updata_item &rArr; set_timeout_time
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_timeout_interrupt_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>wdtimer_stop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wdtimer0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>mac_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mac_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = mac_init &rArr; rf2xx_Init &rArr; rf2xx_tat_set_operating_channel &rArr; rf2xx_tat_get_operating_channel &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_on
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_recv_on
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_protoc_init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>rf2xx_hal_register_read</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rf2xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_w8r8
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_short_address
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_pan_id
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_irq_status
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_irq_mask
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_cca
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_ed_scan
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_modulation_datarate
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_tx_power_level
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_operating_channel
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_ed_value
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[ca]"></a>rf2xx_hal_register_write</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, rf2xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_w8w8
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_pan_id
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_ed_scan
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_modulation_datarate
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfSend_Test_Mode
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_tx_power_level
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_short_address
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_operating_channel
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_irq_mask
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_configure_csma
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>

<P><STRONG><a name="[cc]"></a>rf2xx_hal_subregister_read</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, rf2xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_transaction_state
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_basic_with_retry
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_data_with_retry
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_device_role
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_calibrate_filter
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_clock_speed
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_batmon_get_status
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_batmon_get_voltage_range
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_batmon_get_voltage_threshold
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_rssi_value
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_ed_threshold
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_cca_mode
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_tx_power_level
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_operating_channel
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_packet
</UL>

<P><STRONG><a name="[cd]"></a>rf2xx_hal_subregister_write</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, rf2xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_calibrate_pll
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_calibrate_filter
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_batmon_configure
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_cca
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_cca_mode
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_modulation_datarate
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_reset_state_machine
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfSend_Test_Mode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_use_auto_tx_crc
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_tx_power_level
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_operating_channel
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_enhanced_feature
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_device_role
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_clock_speed
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_bitrate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_configure_csma
</UL>

<P><STRONG><a name="[ce]"></a>rf2xx_hal_frame_read</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, rf2xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = rf2xx_hal_frame_read &rArr; spi1_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_read_buff
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_ccitt_update
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_trx_recv_packet
</UL>

<P><STRONG><a name="[d1]"></a>rf2xx_hal_frame_write</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, rf2xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rf2xx_hal_frame_write &rArr; spi1_write_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_write_buff
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_basic_with_retry
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_data_with_retry
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_packet
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfSend_Test_Mode
</UL>

<P><STRONG><a name="[d3]"></a>rf2xx_hal_sram_read</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, rf2xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_read_buff_with_addr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>

<P><STRONG><a name="[d5]"></a>rf2xx_hal_sram_write</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, rf2xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_write_buff_with_addr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
</UL>

<P><STRONG><a name="[c2]"></a>rf2xx_Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, rf2xx_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rf2xx_Init &rArr; rf2xx_tat_set_operating_channel &rArr; rf2xx_tat_get_operating_channel &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_pan_id
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_use_auto_tx_crc
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_tx_power_level
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_short_address
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_operating_channel
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_irq_mask
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_enhanced_feature
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_device_role
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_clock_speed
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_bitrate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_configure_csma
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_init
</UL>

<P><STRONG><a name="[e3]"></a>get_rfspi_clkdiv</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, rf2xx_mcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_rfspi_clkdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_periph_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_spi_init
</UL>

<P><STRONG><a name="[d7]"></a>rf2xx_spi_init</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, rf2xx_mcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rf2xx_spi_init &rArr; get_rfspi_clkdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rfspi_clkdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[e4]"></a>rf2xx_port_init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, rf2xx_mcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf2xx_port_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_init
</UL>

<P><STRONG><a name="[9a]"></a>rf2xx_port_off</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, rf2xx_mcu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
</UL>

<P><STRONG><a name="[e6]"></a>rf2xx_trx_reset</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, rf2xx_mcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf2xx_trx_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_init
</UL>

<P><STRONG><a name="[c]"></a>PBEXT1_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, rf2xx_mcu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PBEXT1_IRQHandler &rArr; rf2xx_trx_recv_packet &rArr; rf2xx_hal_frame_read &rArr; spi1_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_if_rx
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_trx_recv_packet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_set_trx_end_flag
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sim3l1xx_arm.o(RESET)
</UL>
<P><STRONG><a name="[109]"></a>rf2xx_clear_trx_end_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rf2xx_option.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_basic_with_retry
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_data_with_retry
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_packet
</UL>

<P><STRONG><a name="[e7]"></a>rf2xx_set_trx_end_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rf2xx_option.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
</UL>

<P><STRONG><a name="[10a]"></a>rf2xx_get_trx_end_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf2xx_option.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_basic_with_retry
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_data_with_retry
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_packet
</UL>

<P><STRONG><a name="[ec]"></a>rf_tx_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rf2xx_option.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>

<P><STRONG><a name="[c4]"></a>rf_rx_on</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rf2xx_option.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_init
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>rf_if_rx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf2xx_option.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_trx_recv_packet
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
</UL>

<P><STRONG><a name="[c3]"></a>rf2xx_protoc_init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rf2xx_protoc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_init
</UL>

<P><STRONG><a name="[c5]"></a>rf2xx_recv_on</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rf2xx_recv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_init
</UL>

<P><STRONG><a name="[5a]"></a>mac_parze_packet</STRONG> (Thumb, 574 bytes, Stack size 8 bytes, rf2xx_recv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mac_parze_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e9]"></a>rf2xx_trx_recv_packet</STRONG> (Thumb, 892 bytes, Stack size 24 bytes, rf2xx_recv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = rf2xx_trx_recv_packet &rArr; rf2xx_hal_frame_read &rArr; spi1_read_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_ed_value
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_if_rx
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_read
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
</UL>

<P><STRONG><a name="[152]"></a>p_recv_packet_lock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rf2xx_recv.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>v_recv_packet_lock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rf2xx_recv.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>get_recv_packet_lock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf2xx_recv.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>mac_assemble_packet</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, rf2xx_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mac_assemble_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>

<P><STRONG><a name="[7b]"></a>mac_send_packet_extend</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, rf2xx_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = mac_send_packet_extend &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_packet
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_assemble_packet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_on
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_on
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_recv_on
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cave_pkt
</UL>

<P><STRONG><a name="[40]"></a>mac_send_packet_basic</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, rf2xx_send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = mac_send_packet_basic &rArr; rf2xx_recv_on &rArr; rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_packet
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_assemble_packet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_on
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_on
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_recv_on
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_start_config_flag_pkt
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cf_ack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_syn_ack
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_quit_ack
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cmd_ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cnt_ack
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkt
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_hrt_pkt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ex_pkt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_en_pkt
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_c
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_a
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_b
</UL>

<P><STRONG><a name="[ee]"></a>RfSend_Test_Mode</STRONG> (Thumb, 98 bytes, Stack size 144 bytes, rf2xx_send.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_write
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>

<P><STRONG><a name="[cf]"></a>spi1_read_buff</STRONG> (Thumb, 290 bytes, Stack size 36 bytes, rf2xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi1_read_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_read
</UL>

<P><STRONG><a name="[d4]"></a>spi1_read_buff_with_addr</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, rf2xx_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_sram_read
</UL>

<P><STRONG><a name="[cb]"></a>spi1_w8w8</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, rf2xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi1_w8w8
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>

<P><STRONG><a name="[c9]"></a>spi1_w8r8</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, rf2xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi1_w8r8
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[d2]"></a>spi1_write_buff</STRONG> (Thumb, 176 bytes, Stack size 20 bytes, rf2xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi1_write_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_write
</UL>

<P><STRONG><a name="[d6]"></a>spi1_write_buff_with_addr</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, rf2xx_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_sram_write
</UL>

<P><STRONG><a name="[50]"></a>rf2xx_tat_get_trx_state</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rf2xx_tat_get_trx_state &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_send_data_with_retry
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_leave_sleep_mode
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_calibrate_pll
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_calibrate_filter
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_rssi_value
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_cca
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_ed_scan
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfSend_Test_Mode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_recv_on
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_enter_sleep_mode
</UL>

<P><STRONG><a name="[d8]"></a>rf2xx_tat_init</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rf2xx_tat_init &rArr; rf2xx_tat_get_trx_state &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_trx_reset
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_port_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[ef]"></a>rf2xx_tat_reset_state_machine</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_enter_sleep_mode
</UL>

<P><STRONG><a name="[3f]"></a>rf2xx_tat_set_trx_state</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rf2xx_tat_set_trx_state &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_reset_state_machine
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cave_pkt
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_start_config_flag_pkt
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cf_ack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_syn_ack
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_quit_ack
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cmd_ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cnt_ack
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkt
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_hrt_pkt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ex_pkt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_en_pkt
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_c
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_a
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkg_b
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_do_cca
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfSend_Test_Mode
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_recv_on
</UL>

<P><STRONG><a name="[f1]"></a>rf2xx_tat_get_operating_channel</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf2xx_tat_get_operating_channel &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_band_channel
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_operating_channel
</UL>

<P><STRONG><a name="[d9]"></a>rf2xx_tat_set_operating_channel</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rf2xx_tat_set_operating_channel &rArr; rf2xx_tat_get_operating_channel &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_band_channel
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_operating_channel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[f4]"></a>rf2xx_tat_get_tx_power_level</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[de]"></a>rf2xx_tat_set_tx_power_level</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rf2xx_tat_set_tx_power_level &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[f5]"></a>rf2xx_tat_set_modulation_datarate</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf2xx_tat_set_modulation_datarate &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_bitrate
</UL>

<P><STRONG><a name="[f6]"></a>rf2xx_tat_do_ed_scan</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[f7]"></a>rf2xx_tat_get_cca_mode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[f8]"></a>rf2xx_tat_get_ed_threshold</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[f9]"></a>rf2xx_tat_set_cca_mode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>

<P><STRONG><a name="[fa]"></a>rf2xx_tat_do_cca</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[fb]"></a>rf2xx_tat_get_rssi_value</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[fc]"></a>rf2xx_tat_batmon_get_voltage_threshold</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[fd]"></a>rf2xx_tat_batmon_get_voltage_range</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[fe]"></a>rf2xx_tat_batmon_configure</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>

<P><STRONG><a name="[ff]"></a>rf2xx_tat_batmon_get_status</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[100]"></a>rf2xx_tat_get_clock_speed</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rf2xx_tat_get_clock_speed &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_clock_speed
</UL>

<P><STRONG><a name="[da]"></a>rf2xx_tat_set_clock_speed</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf2xx_tat_set_clock_speed &rArr; rf2xx_tat_get_clock_speed &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_clock_speed
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[101]"></a>rf2xx_tat_calibrate_filter</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[102]"></a>rf2xx_tat_calibrate_pll</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>

<P><STRONG><a name="[99]"></a>rf2xx_tat_enter_sleep_mode</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf2xx_tat_enter_sleep_mode &rArr; rf2xx_tat_reset_state_machine &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_reset_state_machine
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
</UL>

<P><STRONG><a name="[103]"></a>rf2xx_tat_leave_sleep_mode</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
</UL>

<P><STRONG><a name="[e2]"></a>rf2xx_tat_use_auto_tx_crc</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rf2xx_tat_use_auto_tx_crc &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[104]"></a>rf2xx_tat_get_device_role</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[e0]"></a>rf2xx_tat_set_device_role</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rf2xx_tat_set_device_role &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[db]"></a>rf2xx_tat_set_irq_mask</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rf2xx_tat_set_irq_mask &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[105]"></a>rf2xx_tat_get_irq_mask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[106]"></a>rf2xx_tat_get_irq_status</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[dc]"></a>rf2xx_tat_set_enhanced_feature</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rf2xx_tat_set_enhanced_feature &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[dd]"></a>rf2xx_tat_set_bitrate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rf2xx_tat_set_bitrate &rArr; rf2xx_tat_set_modulation_datarate &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_modulation_datarate
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[107]"></a>rf2xx_tat_get_pan_id</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[5c]"></a>rf2xx_tat_set_pan_id</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rf2xx_tat_set_pan_id &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[66]"></a>rf2xx_tat_get_short_address</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rf2xx_tat_get_short_address &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cave_pkt
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cf_ack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_syn_ack
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_quit_ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cnt_ack
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_test_pkt
</UL>

<P><STRONG><a name="[df]"></a>rf2xx_tat_set_short_address</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rf2xx_tat_set_short_address &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[ea]"></a>rf2xx_tat_get_ed_value</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rf2xx_tat_get_ed_value &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_trx_recv_packet
</UL>

<P><STRONG><a name="[e1]"></a>rf2xx_tat_configure_csma</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rf2xx_tat_configure_csma &rArr; rf2xx_hal_subregister_write &rArr; rf2xx_hal_register_write &rArr; spi1_w8w8
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_if_sleeping
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_Init
</UL>

<P><STRONG><a name="[108]"></a>rf2xx_tat_send_data_with_retry</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_trx_state
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_get_trx_end_flag
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_clear_trx_end_flag
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[10b]"></a>rf2xx_tat_send_basic_with_retry</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_get_trx_end_flag
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_clear_trx_end_flag
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[ed]"></a>rf2xx_tat_send_packet</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, rf2xx_tat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf2xx_tat_send_packet &rArr; rf2xx_hal_subregister_read &rArr; rf2xx_hal_register_read &rArr; spi1_w8r8
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_get_trx_end_flag
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_clear_trx_end_flag
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_extend
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_send_packet_basic
</UL>

<P><STRONG><a name="[10c]"></a>rf2xx_tat_get_transaction_state</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rf2xx_tat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_subregister_read
</UL>

<P><STRONG><a name="[f3]"></a>set_band_channel</STRONG> (Thumb, 602 bytes, Stack size 8 bytes, rf2xx_version.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_band_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_operating_channel
</UL>

<P><STRONG><a name="[f2]"></a>get_band_channel</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, rf2xx_version.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_band_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_get_operating_channel
</UL>

<P><STRONG><a name="[155]"></a>get_transaction_time</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rf2xx_version.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>calc_time_cca</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, rf2xx_version.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>calc_trx_end_time_basic</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, rf2xx_version.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>calc_trx_end_time_extend</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, rf2xx_version.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>crc_initial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, crc.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>crc_step</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc_step
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_calculate
</UL>

<P><STRONG><a name="[68]"></a>crc_finish</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, crc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_data_read
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cf_ack
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_quit_ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cnt_ack
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[67]"></a>crc_calculate</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = crc_calculate &rArr; crc_step
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_step
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_data_read
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cf_ack
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_config_pkt
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_quit_ack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_cnt_ack
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[73]"></a>crc_compute</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = crc_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_rx_update_code_pkt
</UL>

<P><STRONG><a name="[d0]"></a>crc_ccitt_update</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, crc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_read
</UL>

<P><STRONG><a name="[93]"></a>resume_sysparam</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, sysparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = resume_sysparam &rArr; copy_sysparam_to_flash &rArr; write_data_to_flash &rArr; write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sysparam_to_buff
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sysparam
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_sysparam_to_flash
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_sysparam_to_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_from_reset
</UL>

<P><STRONG><a name="[112]"></a>set_sysparam</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sysparam_option.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_to_flash
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_from_flash_to_buff
</UL>

<P><STRONG><a name="[10e]"></a>copy_sysparam_to_buff</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sysparam_option.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = copy_sysparam_to_buff &rArr; read_from_flash_to_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_from_flash_to_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resume_sysparam
</UL>

<P><STRONG><a name="[110]"></a>set_sysparam_to_buff</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, sysparam_option.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_sysparam_to_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resume_sysparam
</UL>

<P><STRONG><a name="[111]"></a>copy_sysparam_to_flash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sysparam_option.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = copy_sysparam_to_flash &rArr; write_data_to_flash &rArr; write_to_flash_from_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resume_sysparam
</UL>

<P><STRONG><a name="[10f]"></a>get_sysparam</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, sysparam_option.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_sysparam &rArr; read_from_flash_to_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_from_flash_to_buff
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resume_sysparam
</UL>

<P><STRONG><a name="[b0]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[15a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15b]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_start_config_flag_pkt
</UL>

<P><STRONG><a name="[15d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[15e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[15f]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[162]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[8e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ahb_clock
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halt
</UL>

<P><STRONG><a name="[163]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[164]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[165]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3c]"></a>ITM_SendChar</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, retarget_arm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[59]"></a>NVIC_SystemReset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, as3933.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT0_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_wake_int_init
</UL>

<P><STRONG><a name="[87]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, as3933.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMATCH_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT0_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, as3933.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMATCH_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT0_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;as3933_wake_int_init
</UL>

<P><STRONG><a name="[91]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flashctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_to_flash_from_buff
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
</UL>

<P><STRONG><a name="[9d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intwk_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinwk_init
</UL>

<P><STRONG><a name="[9c]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enter_sleep
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intwk_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinwk_init
</UL>

<P><STRONG><a name="[a3]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtc_alarm_relative.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_add_item
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_adjust_item
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_relative_delete_item
</UL>

<P><STRONG><a name="[af]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_synchronizing
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_time
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_current_time
</UL>

<P><STRONG><a name="[ac]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_set_from_reset
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[ad]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_set_from_reset
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[b4]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_timer_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_timer_init
</UL>

<P><STRONG><a name="[b3]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timeout.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0L_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0H_IRQHandler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_timeout_time
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_timer_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_timer_init
</UL>

<P><STRONG><a name="[c7]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf2xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_sram_write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_sram_read
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_write
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_read
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[c8]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf2xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_sram_write
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_sram_read
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_write
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_frame_read
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_write
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_hal_register_read
</UL>

<P><STRONG><a name="[e5]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rf2xx_mcu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PBEXT1_IRQHandler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_port_init
</UL>

<P><STRONG><a name="[f0]"></a>rf2xx_tat_if_sleeping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf2xx_tat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_trx_state
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_leave_sleep_mode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_batmon_configure
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_cca_mode
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_tx_power_level
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_set_operating_channel
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_configure_csma
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf2xx_tat_enter_sleep_mode
</UL>

<P><STRONG><a name="[118]"></a>_printf_core</STRONG> (Thumb, 988 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[11a]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[119]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
